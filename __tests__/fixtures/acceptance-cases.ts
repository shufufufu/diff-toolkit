import type { AcceptanceTestCase } from '../../src/types.js';

/**
 * 验收测试用例数据
 * 基于 DIFF_ACCEPTANCE_EXAMPLES.md 中的示例
 */
export const acceptanceTestCases: AcceptanceTestCase[] = [
  {
    name: '示例1: 飞机大战游戏 - 敌机代码补全',
    currentCode: `当开始运行(() => {
  设置角色状态("显示");
  永远循环(() => {
    如果(角色坐标("自己", "y坐标") < -450, () => {
      设置x坐标(随机整数(-200, 200));
    });
  });
});`,
    suggestedCode: `当开始运行(() => {
  设置角色状态("显示");
  永远循环(() => {
    改变y坐标("减少", 3);
    如果(角色坐标("自己", "y坐标") < -450, () => {
      设置y坐标(450);
      设置x坐标(随机整数(-200, 200));
    });
  });
});`,
    expected: {
      hasDifference: true,
      equal: [
        {
          startLine: 1,
          endLine: 8,
          content: '当开始运行(() => {\n  设置角色状态("显示");\n  永远循环(() => {\n    如果(角色坐标("自己", "y坐标") < -450, () => {\n      设置x坐标(随机整数(-200, 200));\n    });\n  });\n});'
        }
      ],
      remove: [],
      addition: [
        {
          insertAfterLine: 3,
          content: '    改变y坐标("减少", 3);'
        },
        {
          insertAfterLine: 4,
          content: '      设置y坐标(450);'
        }
      ]
    }
  },

  {
    name: '示例2: 飞机大战游戏 - 子弹碰撞检测补全',
    currentCode: `当克隆体启动(() => {
  设置角色状态("显示");
  永远循环(() => {
    改变y坐标("增加", 8);
    如果(角色坐标("自己", "y坐标") > 450, () => {
      删除本克隆体();
    });
  });
});`,
    suggestedCode: `当克隆体启动(() => {
  设置角色状态("显示");
  永远循环(() => {
    改变y坐标("增加", 8);
    如果(角色坐标("自己", "y坐标") > 450, () => {
      删除本克隆体();
    });
  });
});

当碰撞发生("开始", "enemy", () => {
  删除本克隆体();
  发送广播("敌机被击中");
});`,
    expected: {
      hasDifference: true,
      equal: [
        {
          startLine: 1,
          endLine: 9,
          content: '当克隆体启动(() => {\n  设置角色状态("显示");\n  永远循环(() => {\n    改变y坐标("增加", 8);\n    如果(角色坐标("自己", "y坐标") > 450, () => {\n      删除本克隆体();\n    });\n  });\n});'
        }
      ],
      remove: [],
      addition: [
        {
          insertAfterLine: 9,
          content: '\n当碰撞发生("开始", "enemy", () => {\n  删除本克隆体();\n  发送广播("敌机被击中");\n});'
        }
      ]
    }
  },

  {
    name: '示例3: 玩家控制代码 - 键盘事件补全',
    currentCode: `当开始运行(() => {
  设置角色状态("显示");
});

当键盘触发("按下", "←", () => {
  改变x坐标("减少", 10);
});

当键盘触发("按下", "→", () => {
  改变x坐标("增加", 10);
});`,
    suggestedCode: `当开始运行(() => {
  设置角色状态("显示");
});

当键盘触发("按下", "←", () => {
  改变x坐标("减少", 10);
});

当键盘触发("按下", "→", () => {
  改变x坐标("增加", 10);
});

当键盘触发("按下", "空格键", () => {
  克隆("bullet");
  设置x坐标(角色坐标("自己", "x坐标"));
  设置y坐标(角色坐标("自己", "y坐标"));
});`,
    expected: {
      hasDifference: true,
      equal: [
        {
          startLine: 1,
          endLine: 11,
          content: '当开始运行(() => {\n  设置角色状态("显示");\n});\n\n当键盘触发("按下", "←", () => {\n  改变x坐标("减少", 10);\n});\n\n当键盘触发("按下", "→", () => {\n  改变x坐标("增加", 10);\n});'
        }
      ],
      remove: [],
      addition: [
        {
          insertAfterLine: 11,
          content: '\n当键盘触发("按下", "空格键", () => {\n  克隆("bullet");\n  设置x坐标(角色坐标("自己", "x坐标"));\n  设置y坐标(角色坐标("自己", "y坐标"));\n});'
        }
      ]
    }
  },

  {
    name: '示例4: 广播消息处理 - 事件监听补全',
    currentCode: `当开始运行(() => {
  设置角色状态("显示");
  永远循环(() => {
    改变y坐标("减少", 3);
    如果(角色坐标("自己", "y坐标") < -450, () => {
      设置y坐标(450);
      设置x坐标(随机整数(-200, 200));
    });
  });
});`,
    suggestedCode: `当开始运行(() => {
  设置角色状态("显示");
  永远循环(() => {
    改变y坐标("减少", 3);
    如果(角色坐标("自己", "y坐标") < -450, () => {
      设置y坐标(450);
      设置x坐标(随机整数(-200, 200));
    });
  });
});

当收到广播("敌机被击中", () => {
  设置y坐标(450);
  设置x坐标(随机整数(-200, 200));
});`,
    expected: {
      hasDifference: true,
      equal: [
        {
          startLine: 1,
          endLine: 10,
          content: '当开始运行(() => {\n  设置角色状态("显示");\n  永远循环(() => {\n    改变y坐标("减少", 3);\n    如果(角色坐标("自己", "y坐标") < -450, () => {\n      设置y坐标(450);\n      设置x坐标(随机整数(-200, 200));\n    });\n  });\n});'
        }
      ],
      remove: [],
      addition: [
        {
          insertAfterLine: 10,
          content: '\n当收到广播("敌机被击中", () => {\n  设置y坐标(450);\n  设置x坐标(随机整数(-200, 200));\n});'
        }
      ]
    }
  },

  {
    name: '示例5: 无差异场景',
    currentCode: `当开始运行(() => {
  设置角色状态("显示");
});`,
    suggestedCode: `当开始运行(() => {
  设置角色状态("显示");
});`,
    expected: {
      hasDifference: false,
      equal: [
        {
          startLine: 1,
          endLine: 3,
          content: '当开始运行(() => {\n  设置角色状态("显示");\n});'
        }
      ],
      remove: [],
      addition: []
    }
  },

  // ========== 复杂测试用例 ==========

  {
    name: '复杂1: 多个函数中间插入 - 分散式插入',
    currentCode: `当开始运行(() => {
  设置角色状态("显示");
  设置x坐标(0);
});

当键盘触发("按下", "←", () => {
  改变x坐标("减少", 10);
});

当键盘触发("按下", "→", () => {
  改变x坐标("增加", 10);
});

当收到广播("重置", () => {
  设置x坐标(0);
  设置y坐标(0);
});`,
    suggestedCode: `当开始运行(() => {
  设置角色状态("显示");
  设置x坐标(0);
  设置y坐标(0);
  播放声音("开始音效");
});

当键盘触发("按下", "←", () => {
  播放声音("移动音效");
  改变x坐标("减少", 10);
  如果(角色坐标("自己", "x坐标") < -200, () => {
    设置x坐标(-200);
  });
});

当键盘触发("按下", "→", () => {
  播放声音("移动音效");
  改变x坐标("增加", 10);
  如果(角色坐标("自己", "x坐标") > 200, () => {
    设置x坐标(200);
  });
});

当收到广播("重置", () => {
  设置x坐标(0);
  设置y坐标(0);
});`,
    expected: {
      hasDifference: true,
      equal: [
        {
          startLine: 1,
          endLine: 17,
          content: '当开始运行(() => {\n  设置角色状态("显示");\n  设置x坐标(0);\n});\n\n当键盘触发("按下", "←", () => {\n  改变x坐标("减少", 10);\n});\n\n当键盘触发("按下", "→", () => {\n  改变x坐标("增加", 10);\n});\n\n当收到广播("重置", () => {\n  设置x坐标(0);\n  设置y坐标(0);\n});'
        }
      ],
      remove: [],
      addition: [
        {
          "insertAfterLine": 3,
          "content": "  设置y坐标(0);\n  播放声音(\"开始音效\");"
        },
        {
          "insertAfterLine": 6,
          "content": "  播放声音(\"移动音效\");"
        },
        {
          "insertAfterLine": 7,
          "content": "  如果(角色坐标(\"自己\", \"x坐标\") < -200, () => {\n    设置x坐标(-200);\n  });"
        },
        {
          "insertAfterLine": 10,
          "content": "  播放声音(\"移动音效\");"
        },
        {
          "insertAfterLine": 11,
          "content": "  如果(角色坐标(\"自己\", \"x坐标\") > 200, () => {\n    设置x坐标(200);\n  });"
        }
      ]
    }
  },

  {
    name: '复杂2: 嵌套结构深度插入 - 多层级插入',
    currentCode: `当开始运行(() => {
  永远循环(() => {
    如果(角色坐标("自己", "y坐标") > 100, () => {
      如果(角色坐标("自己", "x坐标") > 0, () => {
        改变x坐标("减少", 1);
      });
    });
  });
});`,
    suggestedCode: `当开始运行(() => {
  设置变量("速度", 1);
  永远循环(() => {
    改变y坐标("减少", 获取变量("速度"));
    如果(角色坐标("自己", "y坐标") > 100, () => {
      播放声音("警告音");
      如果(角色坐标("自己", "x坐标") > 0, () => {
        改变x坐标("减少", 1);
        设置变量("速度", 2);
      }, () => {
        改变x坐标("增加", 1);
        设置变量("速度", 0.5);
      });
      发送广播("位置更新");
    });
    等待(0.1);
  });
});`,
    expected: {
      hasDifference: true,
      equal: [
        {
          startLine: 1,
          endLine: 9,
          content: '当开始运行(() => {\n  永远循环(() => {\n    如果(角色坐标("自己", "y坐标") > 100, () => {\n      如果(角色坐标("自己", "x坐标") > 0, () => {\n        改变x坐标("减少", 1);\n      });\n    });\n  });\n});'
        }
      ],
      remove: [],
      addition: [
        {
          insertAfterLine: 1,
          content: '  设置变量("速度", 1);'
        },
        {
          insertAfterLine: 2,
          content: '    改变y坐标("减少", 获取变量("速度"));'
        },
        {
          insertAfterLine: 3,
          content: '      播放声音("警告音");'
        },
        {
          insertAfterLine: 5,
          content: '        设置变量("速度", 2);\n      }, () => {\n        改变x坐标("增加", 1);\n        设置变量("速度", 0.5);'
        },
        {
          insertAfterLine: 6,
          content: '      发送广播("位置更新");'
        },
        {
          insertAfterLine: 7,
          content: '    等待(0.1);'
        }
      ]
    }
  },

  {
    name: '复杂3: 连续追加多个函数块 - 大量追加',
    currentCode: `当开始运行(() => {
  设置角色状态("显示");
  设置x坐标(0);
  设置y坐标(0);
});`,
    suggestedCode: `当开始运行(() => {
  设置角色状态("显示");
  设置x坐标(0);
  设置y坐标(0);
});

当键盘触发("按下", "w", () => {
  改变y坐标("增加", 10);
  播放声音("移动音效");
});

当键盘触发("按下", "s", () => {
  改变y坐标("减少", 10);
  播放声音("移动音效");
});

当键盘触发("按下", "a", () => {
  改变x坐标("减少", 10);
  播放声音("移动音效");
});

当键盘触发("按下", "d", () => {
  改变x坐标("增加", 10);
  播放声音("移动音效");
});

当收到广播("游戏结束", () => {
  停止所有声音();
  设置角色状态("隐藏");
  说话("游戏结束!", 2);
});`,
    expected: {
      hasDifference: true,
      equal: [
        {
          startLine: 1,
          endLine: 5,
          content: '当开始运行(() => {\n  设置角色状态("显示");\n  设置x坐标(0);\n  设置y坐标(0);\n});'
        }
      ],
      remove: [],
      addition: [
        {
          insertAfterLine: 5,
          content: '\n当键盘触发("按下", "w", () => {\n  改变y坐标("增加", 10);\n  播放声音("移动音效");\n});\n\n当键盘触发("按下", "s", () => {\n  改变y坐标("减少", 10);\n  播放声音("移动音效");\n});\n\n当键盘触发("按下", "a", () => {\n  改变x坐标("减少", 10);\n  播放声音("移动音效");\n});\n\n当键盘触发("按下", "d", () => {\n  改变x坐标("增加", 10);\n  播放声音("移动音效");\n});\n\n当收到广播("游戏结束", () => {\n  停止所有声音();\n  设置角色状态("隐藏");\n  说话("游戏结束!", 2);\n});'
        }
      ]
    }
  },

  {
    name: '复杂4: 混合插入和追加 - 复合场景',
    currentCode: `当开始运行(() => {
  设置角色状态("显示");
});

当键盘触发("按下", "空格键", () => {
  克隆("bullet");
});`,
    suggestedCode: `当开始运行(() => {
  设置角色状态("显示");
  设置变量("生命值", 100);
  设置变量("得分", 0);
});

当键盘触发("按下", "空格键", () => {
  如果(获取变量("生命值") > 0, () => {
    克隆("bullet");
    播放声音("射击音效");
  });
});

当收到广播("敌机被击中", () => {
  改变变量("得分", 10);
  播放声音("击中音效");
});

当收到广播("玩家受伤", () => {
  改变变量("生命值", -10);
  如果(获取变量("生命值") <= 0, () => {
    发送广播("游戏结束");
  });
});`,
    expected: {
      hasDifference: true,
      equal: [
        {
          "startLine": 1,
          "endLine": 5,
          "content": "当开始运行(() => {\n  设置角色状态(\"显示\");\n});\n\n当键盘触发(\"按下\", \"空格键\", () => {"
        },
        {
          "startLine": 7,
          "endLine": 7,
          "content": "});"
        }
      ],
      remove: [
        {
          "startLine": 6,
          "endLine": 6,
          "content": "  克隆(\"bullet\");"
        }
      ],
      addition: [
        {
          "insertAfterLine": 2,
          "content": "  设置变量(\"生命值\", 100);\n  设置变量(\"得分\", 0);"
        },
        {
          "insertAfterLine": 6,
          "content": "  如果(获取变量(\"生命值\") > 0, () => {\n    克隆(\"bullet\");\n    播放声音(\"射击音效\");\n  });\n});\n\n当收到广播(\"敌机被击中\", () => {\n  改变变量(\"得分\", 10);\n  播放声音(\"击中音效\");\n});\n\n当收到广播(\"玩家受伤\", () => {\n  改变变量(\"生命值\", -10);\n  如果(获取变量(\"生命值\") <= 0, () => {\n    发送广播(\"游戏结束\");\n  });"
        }
      ]
    }
  },

  {
    name: '复杂5: 极端边界情况 - 单行变多行',
    currentCode: `当开始运行(() => { 设置角色状态("显示"); 设置x坐标(0); });`,
    suggestedCode: `当开始运行(() => {
  // 初始化角色状态
  设置角色状态("显示");
  
  // 设置初始位置
  设置x坐标(0);
  设置y坐标(0);
  
  // 设置初始属性
  设置变量("速度", 5);
  设置变量("生命值", 100);
  
  // 播放背景音乐
  播放声音("背景音乐", true);
});`,
    expected: {
      hasDifference: true,
      equal: [],
      remove: [
        {
          startLine: 1,
          endLine: 1,
          content: '当开始运行(() => { 设置角色状态("显示"); 设置x坐标(0); });'
        }
      ],
      addition: [
        {
          insertAfterLine: 0,
          content: '当开始运行(() => {\n  // 初始化角色状态\n  设置角色状态("显示");\n  \n  // 设置初始位置\n  设置x坐标(0);\n  设置y坐标(0);\n  \n  // 设置初始属性\n  设置变量("速度", 5);\n  设置变量("生命值", 100);\n  \n  // 播放背景音乐\n  播放声音("背景音乐", true);\n});'
        }
      ]
    }
  }
];

/**
 * 带删除操作的测试用例
 * 专门测试 remove 功能的各种场景
 */
export const removeTestCases: AcceptanceTestCase[] = [
  {
    name: '删除1: 简单函数删除 - 移除单个事件处理',
    currentCode: `当开始运行(() => {
  设置角色状态("显示");
  设置x坐标(0);
});

当键盘触发("按下", "←", () => {
  改变x坐标("减少", 10);
});

当键盘触发("按下", "→", () => {
  改变x坐标("增加", 10);
});

当键盘触发("按下", "空格键", () => {
  克隆("bullet");
});`,
    suggestedCode: `当开始运行(() => {
  设置角色状态("显示");
  设置x坐标(0);
});

当键盘触发("按下", "←", () => {
  改变x坐标("减少", 10);
});

当键盘触发("按下", "→", () => {
  改变x坐标("增加", 10);
});`,
    expected: {
      hasDifference: true,
      equal: [
        {
          startLine: 1,
          endLine: 11,
          content: '当开始运行(() => {\n  设置角色状态("显示");\n  设置x坐标(0);\n});\n\n当键盘触发("按下", "←", () => {\n  改变x坐标("减少", 10);\n});\n\n当键盘触发("按下", "→", () => {\n  改变x坐标("增加", 10);'
        },
        {
          startLine: 16,
          endLine: 16,
          content: '});'
        }
      ],
      remove: [
        {
          startLine: 12,
          endLine: 15,
          content: '});\n\n当键盘触发("按下", "空格键", () => {\n  克隆("bullet");'
        }
      ],
      addition: []
    }
  },

  {
    name: '删除2: 中间代码删除 - 移除函数内部分语句',
    currentCode: `当开始运行(() => {
  设置角色状态("显示");
  设置x坐标(0);
  设置y坐标(0);
  播放声音("开始音效");
  设置变量("生命值", 100);
});`,
    suggestedCode: `当开始运行(() => {
  设置角色状态("显示");
  设置x坐标(0);
  设置变量("生命值", 100);
});`,
    expected: {
      hasDifference: true,
      equal: [
        {
          startLine: 1,
          endLine: 3,
          content: '当开始运行(() => {\n  设置角色状态("显示");\n  设置x坐标(0);'
        },
        {
          startLine: 6,
          endLine: 7,
          content: '  设置变量("生命值", 100);\n});'
        }
      ],
      remove: [
        {
          startLine: 4,
          endLine: 5,
          content: '  设置y坐标(0);\n  播放声音("开始音效");'
        }
      ],
      addition: []
    }
  },

  {
    name: '删除3: 混合删除和添加 - 重构代码结构',
    currentCode: `当开始运行(() => {
  设置角色状态("显示");
  永远循环(() => {
    改变x坐标("增加", 1);
    改变y坐标("增加", 1);
    等待(0.1);
  });
});

当收到广播("停止", () => {
  停止所有脚本();
});`,
    suggestedCode: `当开始运行(() => {
  设置角色状态("显示");
  设置变量("移动速度", 2);
  永远循环(() => {
    改变x坐标("增加", 获取变量("移动速度"));
    等待(0.1);
  });
});`,
    expected: {
      hasDifference: true,
      equal: [
        {
          startLine: 1,
          endLine: 3,
          content: '当开始运行(() => {\n  设置角色状态("显示");\n  永远循环(() => {'
        },
        {
          startLine: 6,
          endLine: 7,
          content: '    等待(0.1);\n  });'
        },
        {
          startLine: 12,
          endLine: 12,
          content: '});'
        }
      ],
      remove: [
        {
          startLine: 4,
          endLine: 5,
          content: '    改变x坐标("增加", 1);\n    改变y坐标("增加", 1);'
        },
        {
          startLine: 8,
          endLine: 11,
          content: '});\n\n当收到广播("停止", () => {\n  停止所有脚本();'
        }
      ],
      addition: [
        {
          insertAfterLine: 2,
          content: '  设置变量("移动速度", 2);'
        },
        {
          insertAfterLine: 5,
          content: '    改变x坐标("增加", 获取变量("移动速度"));'
        }
      ]
    }
  },

  {
    name: '删除4: 简单行删除 - 移除函数调用',
    currentCode: `当开始运行(() => {
  设置角色状态("显示");
  播放声音("开始音效");
  设置x坐标(0);
  设置y坐标(0);
});`,
    suggestedCode: `当开始运行(() => {
  设置角色状态("显示");
  设置x坐标(0);
  设置y坐标(0);
});`,
    expected: {
      hasDifference: true,
      equal: [
        {
          startLine: 1,
          endLine: 2,
          content: '当开始运行(() => {\n  设置角色状态("显示");'
        },
        {
          startLine: 4,
          endLine: 6,
          content: '  设置x坐标(0);\n  设置y坐标(0);\n});'
        }
      ],
      remove: [
        {
          startLine: 3,
          endLine: 3,
          content: '  播放声音("开始音效");'
        }
      ],
      addition: []
    }
  },

  {
    name: '删除5: 末尾删除 - 移除最后的函数',
    currentCode: `当开始运行(() => {
  设置角色状态("显示");
  设置x坐标(0);
});

当收到广播("重置", () => {
  设置x坐标(0);
  设置y坐标(0);
});`,
    suggestedCode: `当开始运行(() => {
  设置角色状态("显示");
  设置x坐标(0);
});`,
    expected: {
      hasDifference: true,
      equal: [
        {
          startLine: 1,
          endLine: 3,
          content: '当开始运行(() => {\n  设置角色状态("显示");\n  设置x坐标(0);'
        },
        {
          startLine: 9,
          endLine: 9,
          content: '});'
        }
      ],
      remove: [
        {
          startLine: 4,
          endLine: 8,
          content: '});\n\n当收到广播("重置", () => {\n  设置x坐标(0);\n  设置y坐标(0);'
        }
      ],
      addition: []
    }
  }
];

// 合并所有测试用例
export const allTestCases: AcceptanceTestCase[] = [
  ...acceptanceTestCases,
  ...removeTestCases
]; 